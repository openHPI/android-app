apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'realm-android'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 26
        versionName "1.7"
        versionCode 33
    }

    productFlavors.all {
        ext.appName = null
        ext.appHost = null
    }

    productFlavors {
        openHPI {
            applicationId "de.xikolo.openhpi"
            buildConfigField "de.xikolo.config.BuildFlavor", "X_FLAVOR", "de.xikolo.config.BuildFlavor.OPEN_HPI"
            appName = "openHPI"
            appHost = "open.hpi.de"
        }
        openHPI_CN {
            applicationId "de.xikolo.openhpi.cn"
            buildConfigField "de.xikolo.config.BuildFlavor", "X_FLAVOR", "de.xikolo.config.BuildFlavor.OPEN_HPI_CN"
            appName = "openHPI CN"
            appHost = "openhpi.cn"
        }
        openSAP {
            applicationId "de.xikolo.opensap"
            buildConfigField "de.xikolo.config.BuildFlavor", "X_FLAVOR", "de.xikolo.config.BuildFlavor.OPEN_SAP"
            appName = "openSAP"
            appHost = "open.sap.com"
        }
        moocHouse {
            applicationId "de.xikolo.moochouse"
            buildConfigField "de.xikolo.config.BuildFlavor", "X_FLAVOR", "de.xikolo.config.BuildFlavor.MOOC_HOUSE"
            appName = "mooc.house"
            appHost = "mooc.house"
        }
        moocHouse_CN {
            applicationId "de.xikolo.moochouse.cn"
            buildConfigField "de.xikolo.config.BuildFlavor", "X_FLAVOR", "de.xikolo.config.BuildFlavor.MOOC_HOUSE_CN"
            appName = "cnMOOC.house"
            appHost = "cnmooc.house"
        }
        openUNE {
            applicationId "de.xikolo.openune"
            buildConfigField "de.xikolo.config.BuildFlavor", "X_FLAVOR", "de.xikolo.config.BuildFlavor.OPEN_UNE"
            appName = "openUNE"
            appHost = "openune.cn"
        }
        openWHO {
            applicationId "de.xikolo.openwho"
            buildConfigField "de.xikolo.config.BuildFlavor", "X_FLAVOR", "de.xikolo.config.BuildFlavor.OPEN_WHO"
            appName = "OpenWHO"
            appHost = "openwho.org"
        }
    }
    signingConfigs {
        if (rootProject.file('signing.properties').exists()) {
            def props = new Properties()
            props.load(new FileInputStream(rootProject.file('signing.properties')))
            openHPI {
                storeFile rootProject.file(props.RELEASE_STORE_FILE)
                storePassword props.RELEASE_STORE_PASSWORD
                keyAlias props.RELEASE_KEY_ALIAS_OPENHPI
                keyPassword props.RELEASE_KEY_PASSWORD_OPENHPI
            }
            openHPI_CN {
                storeFile rootProject.file(props.RELEASE_STORE_FILE)
                storePassword props.RELEASE_STORE_PASSWORD
                keyAlias props.RELEASE_KEY_ALIAS_OPENHPI_CN
                keyPassword props.RELEASE_KEY_PASSWORD_OPENHPI_CN
            }
            openSAP {
                storeFile rootProject.file(props.RELEASE_STORE_FILE)
                storePassword props.RELEASE_STORE_PASSWORD
                keyAlias props.RELEASE_KEY_ALIAS_OPENSAP
                keyPassword props.RELEASE_KEY_PASSWORD_OPENSAP
            }
            moocHouse {
                storeFile rootProject.file(props.RELEASE_STORE_FILE)
                storePassword props.RELEASE_STORE_PASSWORD
                keyAlias props.RELEASE_KEY_ALIAS_MOOCHOUSE
                keyPassword props.RELEASE_KEY_PASSWORD_MOOCHOUSE
            }
            moocHouse_CN {
                storeFile rootProject.file(props.RELEASE_STORE_FILE)
                storePassword props.RELEASE_STORE_PASSWORD
                keyAlias props.RELEASE_KEY_ALIAS_MOOCHOUSE_CN
                keyPassword props.RELEASE_KEY_PASSWORD_MOOCHOUSE_CN
            }
            openUNE {
                storeFile rootProject.file(props.RELEASE_STORE_FILE)
                storePassword props.RELEASE_STORE_PASSWORD
                keyAlias props.RELEASE_KEY_ALIAS_OPENUNE
                keyPassword props.RELEASE_KEY_PASSWORD_OPENUNE
            }
            openWHO {
                storeFile rootProject.file(props.RELEASE_STORE_FILE)
                storePassword props.RELEASE_STORE_PASSWORD
                keyAlias props.RELEASE_KEY_ALIAS_OPENWHO
                keyPassword props.RELEASE_KEY_PASSWORD_OPENWHO
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "de.xikolo.config.BuildType", "X_TYPE", "de.xikolo.config.BuildType.RELEASE"
            debuggable false
            zipAlignEnabled true

            if (rootProject.file('signing.properties').exists()) {
                productFlavors.openHPI.signingConfig signingConfigs.openHPI
                productFlavors.openHPI_CN.signingConfig signingConfigs.openHPI_CN
                productFlavors.openSAP.signingConfig signingConfigs.openSAP
                productFlavors.moocHouse.signingConfig signingConfigs.moocHouse
                productFlavors.moocHouse_CN.signingConfig signingConfigs.moocHouse_CN
                productFlavors.openUNE.signingConfig signingConfigs.openUNE
                productFlavors.openWHO.signingConfig signingConfigs.openWHO
            }
        }
        debug {
            minifyEnabled false
            buildConfigField "de.xikolo.config.BuildType", "X_TYPE", "de.xikolo.config.BuildType.DEBUG"
            shrinkResources false
            debuggable true

            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
        }
    }
    applicationVariants.all { variant ->
        def name = variant.productFlavors.get(0).ext.appName
        def host = variant.productFlavors.get(0).ext.appHost
        if (variant.buildType.name == "debug") {
            name += " Debug"
        }
        variant.resValue "string", "app_name", name
        variant.resValue "string", "app_host", host
    }
    lintOptions {
        abortOnError false
        disable 'MissingTranslation'
        disable 'ExtraTranslation'
        disable 'UnusedAttribute'
    }
    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !travisBuild
    }
}

dependencies {
    // networking
    compile 'com.squareup.okhttp3:okhttp:3.8.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.8.0'
    compile 'org.java-websocket:java-websocket:1.3.3'

    // images
    compile 'com.github.bumptech.glide:glide:3.8.0'
    compile 'com.github.bumptech.glide:okhttp3-integration:1.5.0'

    // architecture
    compile 'com.birbit:android-priority-jobqueue:2.0.1'
    compile 'org.greenrobot:eventbus:3.0.0'

    // api
    compile 'moe.banana:moshi-jsonapi:3.2.2'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-moshi:2.3.0'

    // user interface
    compile 'com.github.barteksc:android-pdf-viewer:2.5.1'
    compile 'de.psdev.licensesdialog:licensesdialog:1.8.2'
    compile 'com.github.Commit451:bypasses:1.1.0'

    // video
    compile 'com.devbrackets.android:exomedia:4.0.3'

    // view binding
    compile 'com.jakewharton:butterknife:8.5.1'
    apt     'com.jakewharton:butterknife-compiler:8.5.1'

    // field binding
    compile 'com.github.yatatsu:autobundle:4.1.0'
    apt     'com.github.yatatsu:autobundle-processor:4.1.0'

    // play services
    compile 'com.google.android.gms:play-services-cast-framework:11.0.4'

    // support libraries
    def supportVersion = '26.1.0'

    compile "com.android.support:support-v4:${supportVersion}"
    compile "com.android.support:appcompat-v7:${supportVersion}"
    compile "com.android.support:cardview-v7:${supportVersion}"
    compile "com.android.support:recyclerview-v7:${supportVersion}"
    compile "com.android.support:mediarouter-v7:${supportVersion}"
    compile "com.android.support:design:${supportVersion}"
    compile "com.android.support:preference-v14:${supportVersion}"

    // local libraries
    compile project(":lanalytics")

    compile fileTree(include: ['*.jar'], dir: 'libs')
}
