import java.nio.file.Files

afterEvaluate {
    android.applicationVariants.all { variant ->
        def variantName = "${variant.flavorName.capitalize()}${variant.buildType.name.capitalize()}"
        def taskName = "linkGoogleServices$variantName"
        def appId = "${variant.mergedFlavor.applicationId}${variant.buildType.applicationIdSuffix}"
        def debugFileOutput = """\
            {
              "project_info": {
                "project_number": "",
                "firebase_url": "",
                "project_id": "",
                "storage_bucket": ""
              },
              "client": [
                {
                  "client_info": {
                    "mobilesdk_app_id": "1:123:android:123abc",
                    "android_client_info": {
                      "package_name": "$appId"
                    }
                  },
                  "oauth_client": [
                    {
                      "client_id": "",
                      "client_type": 3
                    }
                  ],
                  "api_key": [
                    {
                      "current_key": ""
                    }
                  ],
                  "services": {
                    "analytics_service": {
                      "status": 1
                    },
                    "appinvite_service": {
                      "status": 1,
                      "other_platform_oauth_client": []
                    },
                    "ads_service": {
                      "status": 2
                    }
                  }
                }
              ],
              "configuration_version": "1"
            }
        """.stripIndent()

        task(taskName) {
            group 'Build'
            description "Creates and links a google-services-release.json file to the corresponding $variantName file."

            doLast {
                def linkedFile = rootProject.file("app/src/$variant.flavorName/google-services.json")
                if (linkedFile.exists()) {
                    linkedFile.delete()
                }

                if (variant.buildType.name == "debug") {
                    def debugFile = rootProject.file("app/src/$variant.flavorName/google-services-debug.json")
                    if (!debugFile.exists()) {
                        debugFile.write(debugFileOutput)
                    }
                    Files.createSymbolicLink(linkedFile.toPath(), debugFile.toPath())
                }
                if (variant.buildType.name == "release") {
                    def releaseFile = rootProject.file("app/src/$variant.flavorName/google-services-release.json")
                    Files.createSymbolicLink(linkedFile.toPath(), releaseFile.toPath())
                }
            }
        }

        variant.preBuild.dependsOn(taskName)
    }

}
